View(data2)
View(data1)
data2[Objectid]
data2$padus
data2[padus]
data2[,"padus"]
data1$hab
test1<-data2[,"padus"]
test2<-data2$padus
class(test1)
class(test2)
test3<-c("hab1","hab2")
test4<-c("padus","area_nha")
which(test3=="padus")
which(test3=="hab1")
test4[which(test3=="hab1")]
names(data2)
runApp('D:/react/shinysca/app3')
runApp('D:/react/shinysca/app3')
runApp('D:/react/shinysca/app3')
runApp('D:/react/shinysca/app3')
install.packages("bookdown")
test<-"1.1.1.1"
strsplit(test)
strsplit(test,'.')
strsplit(test,'')
strsplit(test,'.')
strsplit(test,'10')
test<-"1.10.1.10.255"
strsplit(test,'10')
test1<-"."
strsplit(test,'10')
strsplit(test,".")
strsplit(test,"\.")
test1<-"."
test1
str_split(test,".")
str_split(test,"")
strsplit(test,"")
tmp<-strsplit(test,"")
class(tmp)
tmp<-strsplit(test,"")[[1]]
tmp
class(tmp)
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
tmp
tmp1<-merge(tmp)
tmp1<-paste(tmp)
tmp1
tmp1<-paste(tmp,"")
tmp1
tmp1<-paste0(tmp,"")
tmp1
paste0(tmp)
paste(tmp, collapse = '')
function(input){
tmp<-strsplit(input,"")[[1]]
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
return paste(tmp,collapse = "")
}
code<-function(input){
tmp<-strsplit(input,"")[[1]]
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
return paste(tmp,collapse = "")
}
code<-function(input){
tmp<-strsplit(input,"")[[1]]
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
paste(tmp,collapse = "")
}
code(input)
input<-"1.10.1.10.255"
code<-function(input){
tmp<-strsplit(input,"")[[1]]
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
paste(tmp,collapse = "")
}
code(input)
input<-"1.10.1.10.255"
code<-function(input){
tmp<-strsplit(input,"")[[1]]
for(i in 1:length(tmp)){
if(tmp[i]=="."){
tmp[i]<-"[.]"
}
}
paste(tmp,collapse = "")
}
code1<-function(input){
tmp<-strsplit(input,"\\.")[[1]]
paste(tmp,collapse = "[.]")
}
code(input)
code1(input)
tmp<-strsplit(input,"\\.")[[1]]
tmp<-strsplit(input,"[.]")[[1]]
shiny::runApp('D:/react/shinysca/app3')
library(shinyWidgets)
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
prettySwitch(inputId = "switch1", label = "Default:"),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
library(shinyWidgets)
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
wwitchInput(inputId = "switch1", label = "Positive"),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
switchInput(inputId = "switch1", label = "Positive"),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
switchInput(inputId = "switch1", label = "Positive",onLabel = "",offLabel = ""),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
switchInput(inputId = "switch1", label = "",onLabel = "Positive",offLabel = "Negative"),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
switchInput(inputId = "switch1", label = "",onLabel = "Positive",offLabel = "Negative",value = T),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
library(shinyWidgets)
ui <- fluidPage(
tags$h1("Pretty switches"),
br(),
fluidRow(
column(
width = 4,
switchInput(inputId = "switch1", label = "Utility",onLabel = "Positive",offLabel = "Negative",value = T),
verbatimTextOutput(outputId = "res1"),
br(),
prettySwitch(inputId = "switch4",
label = "Fill switch with status:",
fill = TRUE, status = "primary"),
verbatimTextOutput(outputId = "res4")
),
column(
width = 4,
prettySwitch(inputId = "switch2",
label = "Danger status:",
status = "danger"),
verbatimTextOutput(outputId = "res2")
),
column(
width = 4,
prettySwitch(inputId = "switch3",
label = "Slim switch:",
slim = TRUE),
verbatimTextOutput(outputId = "res3")
)
)
)
server <- function(input, output, session) {
output$res1 <- renderPrint(input$switch1)
output$res2 <- renderPrint(input$switch2)
output$res3 <- renderPrint(input$switch3)
output$res4 <- renderPrint(input$switch4)
}
shinyApp(ui, server)
}
runApp('D:/react/shinysca/app3')
runApp('D:/react/shinysca/app3')
cewm_local_00_2_10_2012_matrix <- read.csv("~/cewm_local_00_2_10_2012_matrix.csv", header=FALSE)
View(cewm_local_00_2_10_2012_matrix)
data <- cewm_local_00_2_10_2012_matrix
data[,1]
class(data)
data[1,]
title <- data[1,]
class(title)
as.character(title)
title[1]
as.array(title)
as.array(title[1,])
title[1,]
as.character(as.vector(data[1,]))
as.list(title[1,])
View(title)
title[1]
title[2]
class(title[1])
as.vector(title[1])
class(as.vector(title[1]))
as.numeric(title[1])
data[4,2:13]
as.matrix(data[4,2:13])
test<-as.matrix(data[4,2:13])
as.numeric(test)
test<-as.matrix(data[9,2:13])
as.numeric(test)
test1<-as.matrix(data[,2])
test1
test
test<- as.numeric(test)
is.na(test)
any(is.na(test))
test1 <-null
test1 <-NULL
title <- as.matrix(data[1,])
parentcol<-as.matrix(data[2,])
childcol<-as.matrix(data[3,])
parentcol<-as.matrix(data[2,2:13])
childcol<-as.matrix(data[3,2:13])
childcol
childcol<-as.numeric(childcol)
parentcol<-as.numeric(parentcol)
childcol
as.matrix(data[4:5,2:13])
test1<-as.matrix(data[4:5,2:13])
test1
parentrow<-as.numeric(as.matrix(data[4:3193,15]))
childrow<-as.numeric(as.matrix(data[4:3193,15]))
childrow<-as.numeric(as.matrix(data[4:3193,14]))
length(parentrow)
parentrow[3190]
matrix <- as.numeric(as.matrix(data[4:3193,2:13]))
length(parentrow)
length(parentcol)
matrix[1,2]
matrix <- as.matrix(as.numeric(as.matrix(data[4:3193,2:13])),ncol=12)
View(matrix)
?as.matrix
matrix <- matrix(as.numeric(as.matrix(data[4:3193,2:13])),ncol=12)
View(matrix)
matrixdata <- matrix(as.numeric(as.matrix(data[4:3193,2:13])),ncol=12)
matrixdata[1][2]
matrixdata[1,2]
matrixdata[2,2]
c(c(1,2),c(2,3))
c([1,2],[2,3])
[[1,2],[2,3]]
which( is.na(matrixdata), arr.ind=T )
namatrix <-which( is.na(matrixdata), arr.ind=T )
View(namatrix)
class(namatrix)
namatrix[1,]
length(unique(namatrix[,1]))
length(unique(namatrix[,2]))
length(namatrix)
length(namatrix[,1])
cewm_local_00_2_10_2012_matrix <- read.csv("~/cewm_local_00_2_10_2012_matrix.csv", header=FALSE)
View(cewm_local_00_2_10_2012_matrix)
library(leaflet)
library(leaflet.esri)
leaflet() %>% addTiles()
shiny::runApp('C:/Users/jliu/Desktop/datavisualization')
runApp('C:/Users/jliu/Desktop/datavisualization')
runApp('C:/Users/jliu/Desktop/datavisualization')
runApp('C:/Users/jliu/Desktop/datavisualization')
shiny::runApp('C:/Users/jliu/Desktop/open pine/app1008')
options(rsconnect.max.bundle.files=30000)
shiny::runApp('C:/Users/jliu/Desktop/QUESTlab/2019_nCoV')
shiny::runApp('C:/Users/jliu/Desktop/open pine/app1008')
runApp('C:/Users/jliu/Desktop/open pine/app1008')
options(rsconnect.max.bundle.files = 50000)
test<-c(120, 121, 124, 125, 128, 136, 137, 138, 141, 142, 146, 149, 151, 156, 157, 158, 168, 176,177,2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 31,
46, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 94, 96, 98, 101, 106, 107)
length(test)
53-12
setwd("D:/SCATOOL1")
untar("tool1.tar")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
